package com.illumi.dms.controller;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import com.illumi.dms.common.Consts;import com.illumi.dms.common.utils.ValidateObjectUtil;import com.illumi.dms.model.user.DmsPayChanelView;import com.jayqqaa12.jbase.jfinal.ext.ctrl.EasyuiController;import com.jayqqaa12.model.easyui.DataGrid;import com.jfinal.ext.route.ControllerBind;import org.slf4j.LoggerFactory;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Calendar;import java.util.List;@ControllerBind(controllerKey = "/statistic/dmschanelview/user",viewPath="/page/system")public class DmsChanelViewController extends EasyuiController {    //private static final  Logger logger = Logger.getLogger(DmsUserVewController.class);    org.slf4j.Logger logger = LoggerFactory.getLogger(DmsChanelViewController.class);    private static  final  SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");    public void  list(){        JSONObject josn = new JSONObject();        String starDate= getPara("startDate");        String endDate= getPara("endDate");        String sort= ValidateObjectUtil.isBlankDefault(getPara("sort"),"date");        String by= ValidateObjectUtil.isBlankDefault(getPara("by"),"desc");        String type= ValidateObjectUtil.isBlankDefault(getPara("_type"),"all");        int page = this.getParaToInt("page", 1);        int rows = this.getParaToInt("rows", 10);        if(ValidateObjectUtil.isBlank(starDate)){            Calendar calendar = Calendar.getInstance();            calendar.add(Calendar.DAY_OF_MONTH,-7);            starDate =  dateFormat.format(calendar.getTime());        }        getPara(Consts.IS_ABROAD);        StringBuffer sql = new StringBuffer("select 1 as gpid, date ,sum(pay_101) as pay_101, sum(pay_102) as pay_102,sum(pay_201)as pay_201,sum(pay_202) as pay_202, sum(pay_301)as pay_301 ,")                .append(" sum(pay_302) as pay_302, ")                .append(" sum(pay_303) as pay_303, ")                .append(" sum(pay_401) as pay_401, ")                .append(" sum(pay_402) as pay_402, ")                .append(" sum(pay_403) as pay_403, ")                .append(" sum(pay_404) as pay_404, ")                .append(" sum(pay_405) as pay_405, ")                .append(" sum(pay_406) as pay_406, ")                .append(" sum(pay_501) as pay_501, ")                .append(" sum(pay_502) as pay_502, ")                .append(" sum(pay_503) as pay_503, ")                .append(" sum(pay_601) as pay_601, ")                .append(" sum(pay_602) as pay_602, ")                .append(" sum(pay_603) as pay_603 ")                .append(" from dms_pay_chanel_view where 1=1");        if(ValidateObjectUtil.isNotBlank(starDate)){            sql.append(" and date ").append(">= '").append(starDate).append("'");        }        if(ValidateObjectUtil.isNotBlank(endDate)){            sql.append(" and date ").append("< '").append(endDate).append("'");        }        if(ValidateObjectUtil.isNotBlank(type)){            if(type.equals("all")){                sql.append(" group by ").append(" date ");            }else if(type.equals("abroad")){                sql.append(" and is_abroad ").append("=").append("1");                sql.append(" group by ").append(" date ");            }else {                sql.append(" and is_abroad ").append("=").append("0");                sql.append(" group by ").append(" date ");            }        }        DataGrid<DmsPayChanelView> dg = new DataGrid();        long total = DmsPayChanelView.dao.getCountByWhere(String.format("( %s ) as tocount ",sql.toString()));        logger.info(String.format(">>>>>>>>>>>>>total:{%s}", JSON.toJSON(total)));        josn.put("total",total+1);        if(ValidateObjectUtil.isNotBlank(sort)){            sql.append(" order by ").append(sort).append(" ").append(by);        }        long startIndex  = (page-1)*rows;        sql.append(" limit ").append(ValidateObjectUtil.numberIsBlankDefault(startIndex-1,0,0)).append(" , ").append(rows-1);        List<DmsPayChanelView> list = DmsPayChanelView.dao.find(sql.toString());        if(ValidateObjectUtil.isNotBlank(list)){            if(!ValidateObjectUtil.numberIsNotBlank(page,1)){                //DmsUserView view0 = DmsUserView.getTodayView(type);                //list.add(0,view0);            }            josn.put("rows",list);        }else {            list = new ArrayList<>();            if(!ValidateObjectUtil.numberIsNotBlank(page,1)){                //DmsUserView view0 = DmsUserView.getTodayView(type);                //list.add(0,view0);            }            josn.put("rows",list);        }        //logger.info(String.format(">>>>>>>>>>>>>infomation:{%s}", JsonKit.toJson(josn,8)));        renderJson(josn);    }    public void  chartdata(){        JSONObject json = new JSONObject();        StringBuffer sql = new StringBuffer("select 1 as gpid, date ,sum(pay_101) as pay_101, sum(pay_102) as pay_102,sum(pay_201)as pay_201,sum(pay_202) as pay_202, sum(pay_301)as pay_301 ,")                .append(" sum(pay_302) as pay_302, ")                .append(" sum(pay_303) as pay_303, ")                .append(" sum(pay_401) as pay_401, ")                .append(" sum(pay_402) as pay_402, ")                .append(" sum(pay_403) as pay_403, ")                .append(" sum(pay_404) as pay_404, ")                .append(" sum(pay_405) as pay_405, ")                .append(" sum(pay_406) as pay_406, ")                .append(" sum(pay_501) as pay_501, ")                .append(" sum(pay_502) as pay_502, ")                .append(" sum(pay_503) as pay_503, ")                .append(" sum(pay_601) as pay_601, ")                .append(" sum(pay_602) as pay_602, ")                .append(" sum(pay_603) as pay_603 ")                //.append(" (select date from dms_pay_chanel_view where date >= '%s' and date< '%s' and is_abroad in (%s) order by date asc limit 1 ) as startDate, ")                //.append(" (select date from dms_pay_chanel_view where date >= '%s' and date< '%s' and is_abroad in (%s) order by date desc limit 1 ) as endDate, ")                .append(" from dms_pay_chanel_view where 1=1");        String starDate= getPara("startDate");        logger.info(String.format(">>>>>>startDate:%s", starDate));        if(ValidateObjectUtil.isBlank(starDate)){            Calendar calendar = Calendar.getInstance();            calendar.add(Calendar.DAY_OF_MONTH,-7);            starDate =  dateFormat.format(calendar.getTime());        }        String endDate= ValidateObjectUtil.isBlankDefault(getPara("endDate"),dateFormat.format(Calendar.getInstance().getTime()));        logger.info(String.format(">>>>>>startDate:%s", endDate));        String type= ValidateObjectUtil.isBlankDefault(getPara("_type"),"all");        if(ValidateObjectUtil.isNotBlank(starDate)){            sql.append(" and date").append(">= '").append(starDate).append("'");        }        if(ValidateObjectUtil.isNotBlank(endDate)) {            sql.append(" and date").append("< '").append(endDate).append("'");        }        if(ValidateObjectUtil.isNotBlank(type)){            if(type.equals("all")){                sql.append(" and is_abroad ").append("in (").append("1,0 )");            }else if(type.equals("abroad")){                sql.append(" and is_abroad ").append("=").append("1");            }else {                sql.append(" and is_abroad ").append("=").append("0");            }        }        /*String querySql="";        if(ValidateObjectUtil.isNotBlank(type)){            if(type.equals("all")){                querySql =String.format(sql.toString(),starDate,endDate,"1,0");            }else if(type.equals("abroad")){                querySql =String.format(sql.toString(),starDate,endDate,"1");            }else {                querySql =String.format(sql.toString(),starDate,endDate,"0");            }        }*/        logger.info(String.format(">>>>>>>>>>>>>>>sql:%s", sql.toString()));        List<DmsPayChanelView> result= DmsPayChanelView.dao.find(sql.toString());        //logger.info(String.format(">>>>>>>>>>>>>>>result:%s", JsonKit.toJson(result,8)));        if(ValidateObjectUtil.isNotBlank(result)){            List<String>  dates= new ArrayList<>(2);            JSONArray listData =  new JSONArray();            for(DmsPayChanelView view : result){                dates.add(0,starDate);                dates.add(1,endDate);                JSONObject object101 = new JSONObject();                object101.put("name","苹果支付");                object101.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_101"),0,0));                listData.add(object101);                JSONObject object102 = new JSONObject();                object102.put("name","谷歌支付");                object102.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_102"),0,0));                listData.add(object102);                JSONObject object201 = new JSONObject();                object201.put("name","步步德扑");                object201.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_201"),0,0));                listData.add(object201);                JSONObject object202 = new JSONObject();                object202.put("name","九格创想");                object202.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_202"),0,0));                listData.add(object202);                JSONObject object301 = new JSONObject();                object301.put("name","微信安卓");                object301.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_301"),0,0));                listData.add(object301);                JSONObject object302 = new JSONObject();                object302.put("name","微信公众号");                object302.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_302"),0,0));                listData.add(object302);                JSONObject object303 = new JSONObject();                object303.put("name","微信CMS");                object303.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_303"),0,0));                listData.add(object303);                JSONObject object401 = new JSONObject();                object401.put("name","支付宝大额");                object401.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_401"),0,0));                listData.add(object401);                JSONObject object402 = new JSONObject();                object402.put("name","支付宝公众号");                object402.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_402"),0,0));                listData.add(object402);                JSONObject object403 = new JSONObject();                object403.put("name","支付宝CMS");                object403.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_403"),0,0));                listData.add(object403);                JSONObject object404 = new JSONObject();                object404.put("name","支付宝CMS(第三方平台)");                object404.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_404"),0,0));                listData.add(object404);                JSONObject object405 = new JSONObject();                object405.put("name","支付宝CMS(阿里官方)");                object405.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_405"),0,0));                listData.add(object405);                JSONObject object406 = new JSONObject();                object406.put("name","支付宝统一平台");                object406.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_406"),0,0));                listData.add(object406);                JSONObject object501 = new JSONObject();                object501.put("name","钻石基金充值(银联支付)CMS");                object501.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_501"),0,0));                listData.add(object501);                JSONObject object502 = new JSONObject();                object502.put("name","大额充值(银联支付)CMS");                object502.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_502"),0,0));                listData.add(object502);                JSONObject object601 = new JSONObject();                object601.put("name","CMS钻石基金_ZYF");                object601.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_601"),0,0));                listData.add(object601);                JSONObject object602 = new JSONObject();                object602.put("name","CMS钻石充值_ZYF");                object602.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_602"),0,0));                listData.add(object602);                JSONObject object603 = new JSONObject();                object603.put("name","DMP钻石充值_ZYF");                object603.put("value",ValidateObjectUtil.isBlankDefault(view.get("pay_602"),0,0));                listData.add(object603);            }            json.put("dates",dates);            json.put("series.data",listData);            logger.info(String.format(">>>>>>>>>>>>>infomation:{%s}", JSON.toJSON(json)));        }else{            json.put("dates",null);            json.put("series.data",null);        }        renderJson(json);    }}