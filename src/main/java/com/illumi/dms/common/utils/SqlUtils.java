package com.illumi.dms.common.utils;import com.illumi.dms.common.Consts;import java.util.Map;public class SqlUtils {    public static String concatSql (Map<String,Object> map) {        StringBuilder sb = new StringBuilder();        String fieldSql;        for (String fieldName : map.keySet()) {            if (map.get(fieldName)!=null){                fieldSql = getFieldSql(fieldName, map.get(fieldName));                sb.append(fieldSql);            }        }        return sb.toString();    }    public static String getFieldSql(String fieldName,Object fieldValue){        String result = "";        switch (fieldName)        {            case Consts.START_TIME: result = " and date >= '" + fieldValue +"'";break;            case Consts.END_TIME: result = " and date <= '" + fieldValue +"'";break;            case Consts.IS_ABROAD: result = " and "+fieldName+"="+fieldValue;break;        }        return result;    }    public static String getOrderSql(String oldSql,String sortField,String order) {        StringBuilder sb = new StringBuilder();        sb.append(oldSql);        sb.append(String.format(" order by %s %s",sortField,order));        return sb.toString();    }    public static String getGroupSql(String oldSql,String groupField){        StringBuilder sb = new StringBuilder();        sb.append(oldSql);        sb.append(String.format(" group by %s",groupField));        return sb.toString();    }}